<?xml version="1.0"?>
<!DOCTYPE xsl:stylesheet [
<<<<<<< .mine
  <!ENTITY tw "http://tw.rpi.edu/schema/">
  <!ENTITY here "http://tw.rpi.edu/instances/">
  <!ENTITY foaf "http://xmlns.com/foaf/0.1/">
=======
  <!ENTITY tw "http://tw.rpi.edu/schema/">
  <!ENTITY here "http://tw.rpi.edu/instances/">
>>>>>>> .r602
]>
<xsl:stylesheet version="1.0"
		xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
		xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
		xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
		xmlns:tw="&tw;"
		xmlns:time="http://www.w3.org/2006/time#"
		xmlns:owl="http://www.w3.org/2002/07/owl#"
		xmlns:s="http://www.w3.org/2005/sparql-results#"
		xmlns:exsl="http://exslt.org/common"
		xmlns:fn="http://www.w3.org/2005/xpath-functions"
		xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	  xmlns:foaf="&foaf;"
	xmlns:dc="http://purl.org/dc/terms/"
		xmlns="http://www.w3.org/1999/xhtml"
>
  <xsl:import href="/xslt/person-common.xsl"/>
  <xsl:import href="/xslt/event-common.xsl"/>

  <xsl:key name="tw:Author-nodes" match="tw:Author|*[rdf:type/@rdf:resource='&tw;Author']" use="@rdf:nodeID"/>
  <xsl:key name="tw:hasRole-nodes" match="tw:hasRole" use="@rdf:nodeID|*/@rdf:nodeID"/>
  <xsl:key name="foaf:Person-nodes" match="foaf:Person|*[rdf:type/@rdf:resource='&foaf;Person']" use="@rdf:resource"/>

  <xsl:template name="get-document-title">
    <xsl:param name="document"/>
    <xsl:value-of select="$document/dc:title"/>
  </xsl:template>

<!--
  <xsl:template name="get-document-authors">
    <xsl:param name="document"/>
    <xsl:param name="root" select="/"/>
    <xsl:variable name="roles-raw">
    <xsl:for-each select="$document/tw:hasAgentWithRole">
      <xsl:choose>
	<xsl:when test="current()/@rdf:nodeID">
	  <xsl:copy-of select="$root//tw:Role[@rdf:nodeID=current()/@rdf:nodeID]|$root//*[@rdf:nodeID=current()/@rdf:nodeID and rdf:type/@rdf:resource='&tw;Role']"/>
	</xsl:when>
	<xsl:when test="current()/@rdf:resource">
	  <xsl:variable name="uri" select="current()/@rdf:resource"/>
	  <xsl:value-of select="$uri"/>
	  <xsl:copy-of select="$root//*[@rdf:about=$uri]"/>
	</xsl:when>
	<xsl:when test="current()/*">
	  <xsl:copy-of select="current()/*"/>
	</xsl:when>
      </xsl:choose>
    </xsl:for-each>
    </xsl:variable>
    <xsl:variable name="roles" select="exsl:node-set($roles-raw)"/>
    <xsl:for-each select="$roles/*">
      <xsl:sort select="tw:index"/>
      <xsl:choose>
	<xsl:when test="current()/@rdf:about">
	  <xsl:copy-of select="$root//*[tw:hasRole/@rdf:resource=current()/@rdf:about]|$root//*[tw:hasRole/*/@rdf:about=current()/@rdf:about]"/>
	</xsl:when>
	<xsl:when test="current()/@rdf:nodeID">
	  <xsl:copy-of select="$root//*[tw:hasRole/*/@rdf:nodeID=current()/@rdf:nodeID]|$root//*[tw:hasRole/@rdf:nodeID=current()/@rdf:nodeID]"/>
	</xsl:when>
	<xsl:otherwise>
	  <tw:Person><tw:hasLastName>Unknown Author</tw:hasLastName></tw:Person>
	</xsl:otherwise>
      </xsl:choose>
    </xsl:for-each>
  </xsl:template>
-->
  <xsl:template name="get-document-authors">
    <xsl:param name="document"/>
    <xsl:param name="root" select="/"/>

    <xsl:for-each select="$document/tw:hasAgentWithRole/*/@rdf:nodeID|$document/tw:hasAgentWithRole/@rdf:nodeID">
      <nodeID><xsl:value-of select="."/></nodeID>
    </xsl:for-each>
<!--
    <xsl:for-each select="key('tw:Author-nodes',$document/tw:hasAgentWithRole/*/@rdf:nodeID|$document/tw:hasAgentWithRole/@rdf:nodeID)">
      <xsl:sort select="tw:index" order="ascending"/>
      <xsl:variable name="person" select="key('tw:hasRole-nodes',@rdf:nodeID)/.."/>
      <id><xsl:value-of select="$person/@rdf:about|$person/@rdf:nodeID"/></id>
    </xsl:for-each>
-->
  </xsl:template>
</xsl:stylesheet>
