<<<<<<< .mine
<?xml version="1.0"?>
<!DOCTYPE xsl:stylesheet [
  <!ENTITY tw "http://tw.rpi.edu/schema/">
  <!ENTITY here "http://tw.rpi.edu/instances/">
  <!ENTITY foaf "http://xmlns.com/foaf/0.1/">
]>
<xsl:stylesheet 
   version="2.0"
   xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
   xmlns:tw="&tw;"
   xmlns:fn="http://www.w3.org/2005/xpath-functions"
   xmlns:owl="http://www.w3.org/2002/07/owl#"
   xmlns:foaf="http://xmlns.com/foaf/0.1/"
   xmlns="http://www.w3.org/1999/xhtml">

  <xsl:import href="/xslt/project-list-item.xsl"/>
    <xsl:import href="/xslt/theme-list-item.xsl"/>
  <xsl:include href="/xslt/professor-list-item.xsl"/>
  
  
  <xsl:template name="person-list">
    <xsl:param name="admin"/>
    <xsl:param name="node"/>
    <xsl:choose>
      <xsl:when test="$node//foaf:Person|$node//*/rdf:type[@rdf:resource='&foaf;Person']">
        <div xmlns="http://www.w3.org/1999/xhtml">
          <link href="/css/person-list.css" type="text/css" rel="stylesheet"/>
          <table class="person-list">
            <xsl:for-each select="$node//foaf:Person|$node//*/rdf:type[@rdf:resource='&foaf;Person']/..">
              <xsl:sort select="foaf:lastName"/>
              <xsl:call-template name="professor-list-item">
                <xsl:with-param name="admin" select="$admin"/>
                <xsl:with-param name="node" select="current()"/>
				<xsl:with-param name="call-image-url" select="false()"/>
              </xsl:call-template>
            </xsl:for-each>
          </table>
        </div>
      </xsl:when>
      <xsl:otherwise>
        <p xmlns="http://www.w3.org/1999/xhtml">No elements matched your query</p>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
 
  <xsl:template name="project-list">
    <xsl:param name="admin"/>
    <xsl:param name="node"/>
    <xsl:param name="root" select="/"/>
    <link href="/css/project.css" rel="stylesheet" type="text/css"/>
	 <table class="project-list">
      <xsl:for-each select="$node//foaf:Project|$node//*/rdf:type[@rdf:resource='&foaf;Project']">
	<xsl:call-template name="project-list-item">
	  <xsl:with-param name="admin" select="$admin"/>
	  <xsl:with-param name="embed" select="true()"/>
	  <xsl:with-param name="node" select="current()"/>
	  <xsl:with-param name="root" select="$root"/>
	</xsl:call-template>
      </xsl:for-each>
    </table>
  </xsl:template>

  <xsl:template name="theme-list">
    <xsl:param name="admin"/>
    <xsl:param name="themes"/>
    <xsl:param name="indent-subthemes" select="true()"/>
    <xsl:param name="root" select="/"/>
    <link href="/css/theme.css" rel="stylesheet" type="text/css"/>
    <table class="theme-list">
      <xsl:for-each select="$themes">
	<xsl:sort select="foaf:name"/>
	<xsl:call-template name="theme-list-item">
	  <xsl:with-param name="admin" select="$admin"/>
	  <xsl:with-param name="embed" select="true()"/>
	  <xsl:with-param name="node" select="current()"/>
	  <xsl:with-param name="root" select="$root"/>
	</xsl:call-template>
	<xsl:if test="$indent-subthemes!=false()">
	  <xsl:if test="$root//*[tw:hasParentTheme/@rdf:resource=current()/@rdf:about or tw:hasParentTheme/*/@rdf:about=current()/@rdf:about]">
	    <xsl:for-each select="$root//*[tw:hasParentTheme/@rdf:resource=current()/@rdf:about or tw:hasParentTheme/*/@rdf:about=current()/@rdf:about]">
	      <xsl:sort select="tw:hasName"/>
	      <xsl:call-template name="theme-list-item">
		<xsl:with-param name="admin" select="$admin"/>
		<xsl:with-param name="embed" select="true()"/>
		<xsl:with-param name="node" select="current()"/>
		<xsl:with-param name="root" select="$root"/>
		<xsl:with-param name="class">subtheme-list-item</xsl:with-param>
	      </xsl:call-template>
	    </xsl:for-each>
	    <tr class="theme-separator"><td></td></tr>
	  </xsl:if>
	</xsl:if>
      </xsl:for-each>
      </table>
  </xsl:template>  
 
  <xsl:template match="/">
    <xsl:call-template name="person-list">
      <xsl:with-param name="admin" select="false()"/>
      <xsl:with-param name="node" select="rdf:RDF"/>
    </xsl:call-template>
	    <xsl:call-template name="project-list">
      <xsl:with-param name="admin" select="false()"/>
      <xsl:with-param name="node" select="rdf:RDF"/>
    </xsl:call-template>
      <xsl:variable name="themes" select="rdf:RDF//tw:Theme[not(tw:hasParentTheme)]|rdf:RDF//*[rdf:type/@rdf:resource='&tw;Theme' and not(tw:hasParentTheme)]"/>
      <xsl:call-template name="theme-list">
	<xsl:with-param name="themes" select="$themes"/>
	<xsl:with-param name="root" select="/"/>
	<xsl:with-param name="admin" select="false()"/>
      </xsl:call-template>
  </xsl:template>
  
</xsl:stylesheet>
=======
<?xml version="1.0"?>
<!DOCTYPE xsl:stylesheet [
  <!ENTITY tw "http://tw.rpi.edu/schema/">
  <!ENTITY here "http://tw.rpi.edu/instances/">
  <!ENTITY foaf "http://xmlns.com/foaf/0.1/">
]>
<xsl:stylesheet 
   version="2.0"
   xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
   xmlns:tw="&tw;"
   xmlns:fn="http://www.w3.org/2005/xpath-functions"
   xmlns:owl="http://www.w3.org/2002/07/owl#"
   xmlns:foaf="http://xmlns.com/foaf/0.1/"
   xmlns="http://www.w3.org/1999/xhtml">

  <xsl:import href="/tw.rpi.edu/styles/project-list-item.xsl"/>
    <xsl:import href="/tw.rpi.edu/styles/theme-list-item.xsl"/>
  <xsl:include href="/tw.rpi.edu/styles/professor-list-item.xsl"/>
  
  
  <xsl:template name="person-list">
    <xsl:param name="admin"/>
    <xsl:param name="node"/>
    <xsl:choose>
      <xsl:when test="$node//foaf:Person|$node//*/rdf:type[@rdf:resource='&foaf;Person']">
        <div xmlns="http://www.w3.org/1999/xhtml">
          <link href="/css/person-list.css" type="text/css" rel="stylesheet"/>
          <table class="person-list">
            <xsl:for-each select="$node//foaf:Person|$node//*/rdf:type[@rdf:resource='&foaf;Person']/..">
              <xsl:sort select="foaf:lastName"/>
              <xsl:call-template name="professor-list-item">
                <xsl:with-param name="admin" select="$admin"/>
                <xsl:with-param name="node" select="current()"/>
				<xsl:with-param name="call-image-url" select="false()"/>
              </xsl:call-template>
            </xsl:for-each>
          </table>
        </div>
      </xsl:when>
      <xsl:otherwise>
        <p xmlns="http://www.w3.org/1999/xhtml">No elements matched your query</p>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
 
  <xsl:template name="project-list">
    <xsl:param name="admin"/>
    <xsl:param name="node"/>
    <xsl:param name="root" select="/"/>
    <link href="http://wineagent.tw.rpi.edu/css/project.css" rel="stylesheet" type="text/css"/>
	 <table class="project-list">
      <xsl:for-each select="$node//foaf:Project|$node//*/rdf:type[@rdf:resource='&foaf;Project']">
	<xsl:call-template name="project-list-item">
	  <xsl:with-param name="admin" select="$admin"/>
	  <xsl:with-param name="embed" select="true()"/>
	  <xsl:with-param name="node" select="current()"/>
	  <xsl:with-param name="root" select="$root"/>
	</xsl:call-template>
      </xsl:for-each>
    </table>
  </xsl:template>

  <xsl:template name="theme-list">
    <xsl:param name="admin"/>
    <xsl:param name="themes"/>
    <xsl:param name="indent-subthemes" select="true()"/>
    <xsl:param name="root" select="/"/>
    <link href="http://wineagent.tw.rpi.edu/css/theme.css" rel="stylesheet" type="text/css"/>
    <table class="theme-list">
      <xsl:for-each select="$themes">
	<xsl:sort select="foaf:name"/>
	<xsl:call-template name="theme-list-item">
	  <xsl:with-param name="admin" select="$admin"/>
	  <xsl:with-param name="embed" select="true()"/>
	  <xsl:with-param name="node" select="current()"/>
	  <xsl:with-param name="root" select="$root"/>
	</xsl:call-template>
	<xsl:if test="$indent-subthemes!=false()">
	  <xsl:if test="$root//*[tw:hasParentTheme/@rdf:resource=current()/@rdf:about or tw:hasParentTheme/*/@rdf:about=current()/@rdf:about]">
	    <xsl:for-each select="$root//*[tw:hasParentTheme/@rdf:resource=current()/@rdf:about or tw:hasParentTheme/*/@rdf:about=current()/@rdf:about]">
	      <xsl:sort select="tw:hasName"/>
	      <xsl:call-template name="theme-list-item">
		<xsl:with-param name="admin" select="$admin"/>
		<xsl:with-param name="embed" select="true()"/>
		<xsl:with-param name="node" select="current()"/>
		<xsl:with-param name="root" select="$root"/>
		<xsl:with-param name="class">subtheme-list-item</xsl:with-param>
	      </xsl:call-template>
	    </xsl:for-each>
	    <tr class="theme-separator"><td></td></tr>
	  </xsl:if>
	</xsl:if>
      </xsl:for-each>
      </table>
  </xsl:template>  
 
  <xsl:template match="/">
    <xsl:call-template name="person-list">
      <xsl:with-param name="admin" select="false()"/>
      <xsl:with-param name="node" select="rdf:RDF"/>
    </xsl:call-template>
	    <xsl:call-template name="project-list">
      <xsl:with-param name="admin" select="false()"/>
      <xsl:with-param name="node" select="rdf:RDF"/>
    </xsl:call-template>
      <xsl:variable name="themes" select="rdf:RDF//tw:Theme[not(tw:hasParentTheme)]|rdf:RDF//*[rdf:type/@rdf:resource='&tw;Theme' and not(tw:hasParentTheme)]"/>
      <xsl:call-template name="theme-list">
	<xsl:with-param name="themes" select="$themes"/>
	<xsl:with-param name="root" select="/"/>
	<xsl:with-param name="admin" select="false()"/>
      </xsl:call-template>
  </xsl:template>
  
</xsl:stylesheet>>>>>>>> .r602
